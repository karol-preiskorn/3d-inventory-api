{
  "id": "https://spec.openapis.org/oas/3.0/schema/2019-04-02",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "OpenAPI 3.0.X",
  "type": "object",
  "required": [
    "openapi",
    "info",
    "paths"
  ],
  "properties": {
    "openapi": {
      "type": "string",
      "pattern": "^3\\.0\\.\\d(-.+)?$"
    },
    "info": {
      "$ref": "#/definitions/Info"
    },
    "externalDocs": {
      "$ref": "#/definitions/ExternalDocumentation"
    },
    "servers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Server"
      }
    },
    "security": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SecurityRequirement"
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "uniqueItems": true
    },
    "paths": {
      "$ref": "#/definitions/Paths"
    },
    "components": {
      "$ref": "#/definitions/Components"
    },
    "x-42c-request-strategies": {
      "$ref": "#/definitions/X42cRequestStrategies"
    },
    "x-42c-response-strategies": {
      "$ref": "#/definitions/X42cResponseStrategies"
    },
    "x-42c-no-authentication": {
      "$ref": "#/definitions/X42cNoAuthentication"
    },
    "x-42c-mtls": {
      "$ref": "#/definitions/X42cMTLS"
    },
    "x-42c-skipIssues": {
      "$ref": "#/definitions/X42cSkipIssues"
    }
  },
  "patternProperties": {
    "^x-": {}
  },
  "additionalProperties": false,
  "definitions": {
    "Reference": {
      "type": "object",
      "required": [
        "$ref"
      ],
      "patternProperties": {
        "^\\$ref$": {
          "type": "string",
          "format": "uri-reference"
        }
      }
    },
    "Info": {
      "type": "object",
      "required": [
        "title",
        "version"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "termsOfService": {
          "type": "string",
          "format": "uri-reference"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "license": {
          "$ref": "#/definitions/License"
        },
        "version": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        },
        "email": {
          "type": "string",
          "format": "email"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "License": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Server": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServerVariable"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ServerVariable": {
      "type": "object",
      "required": [
        "default"
      ],
      "properties": {
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "default": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Components": {
      "type": "object",
      "properties": {
        "schemas": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Schema"
                },
                {
                  "$ref": "#/definitions/Reference"
                }
              ]
            }
          }
        },
        "responses": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Response"
                }
              ]
            }
          },
          "properties": {
            "x-42c-local-strategy": {
              "$ref": "#/definitions/X42cLocalStrategy"
            }
          }
        },
        "parameters": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Parameter"
                }
              ]
            }
          }
        },
        "examples": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Example"
                }
              ]
            }
          }
        },
        "requestBodies": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/RequestBody"
                }
              ]
            }
          }
        },
        "headers": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Header"
                }
              ]
            }
          }
        },
        "securitySchemes": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/SecurityScheme"
                }
              ]
            }
          }
        },
        "links": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Link"
                }
              ]
            }
          }
        },
        "callbacks": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z0-9\\.\\-_]+$": {
              "oneOf": [
                {
                  "$ref": "#/definitions/Reference"
                },
                {
                  "$ref": "#/definitions/Callback"
                }
              ]
            }
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Schema": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "multipleOf": {
          "type": "number",
          "minimum": 0,
          "exclusiveMinimum": true
        },
        "maximum": {
          "type": "number"
        },
        "exclusiveMaximum": {
          "type": "boolean",
          "default": false
        },
        "minimum": {
          "type": "number"
        },
        "exclusiveMinimum": {
          "type": "boolean",
          "default": false
        },
        "maxLength": {
          "type": "integer",
          "minimum": 0
        },
        "minLength": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "pattern": {
          "type": "string",
          "format": "regex"
        },
        "maxItems": {
          "type": "integer",
          "minimum": 0
        },
        "minItems": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "uniqueItems": {
          "type": "boolean",
          "default": false
        },
        "maxProperties": {
          "type": "integer",
          "minimum": 0
        },
        "minProperties": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "uniqueItems": true
        },
        "enum": {
          "type": "array",
          "items": {},
          "minItems": 1,
          "uniqueItems": false
        },
        "type": {
          "type": "string",
          "enum": [
            "array",
            "boolean",
            "integer",
            "number",
            "object",
            "string"
          ]
        },
        "not": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "allOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "oneOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "items": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Schema"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "additionalProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            },
            {
              "type": "boolean"
            }
          ],
          "default": true
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "default": {},
        "nullable": {
          "type": "boolean",
          "default": false
        },
        "discriminator": {
          "$ref": "#/definitions/Discriminator"
        },
        "readOnly": {
          "type": "boolean",
          "default": false
        },
        "writeOnly": {
          "type": "boolean",
          "default": false
        },
        "example": {},
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "xml": {
          "$ref": "#/definitions/XML"
        },
        "x-42c-sample": {
          "$ref": "#/definitions/X42cSample"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Discriminator": {
      "type": "object",
      "required": [
        "propertyName"
      ],
      "properties": {
        "propertyName": {
          "type": "string"
        },
        "mapping": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "XML": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "format": "uri"
        },
        "prefix": {
          "type": "string"
        },
        "attribute": {
          "type": "boolean",
          "default": false
        },
        "wrapped": {
          "type": "boolean",
          "default": false
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Response": {
      "type": "object",
      "required": [
        "description"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Header"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          }
        },
        "links": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Link"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "x-42c-local-strategy": {
          "$ref": "#/definitions/X42cLocalStrategy"
        },
        "x-42c-weight-content": {
          "$ref": "#/definitions/X42cWeightContent"
        },
        "x-42c-weight-headers": {
          "$ref": "#/definitions/X42cWeightHeader"
        },
        "x-42c-weight-success": {
          "$ref": "#/definitions/X42cWeightSuccess"
        },
        "x-42c-weight-fail": {
          "$ref": "#/definitions/X42cWeightFail"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "MediaType": {
      "type": "object",
      "properties": {
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "encoding": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Encoding"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        }
      ]
    },
    "Example": {
      "type": "object",
      "properties": {
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {},
        "externalValue": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Header": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false
        },
        "style": {
          "type": "string",
          "enum": [
            "simple"
          ],
          "default": "simple"
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "minProperties": 1,
          "maxProperties": 1
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        },
        {
          "$ref": "#/definitions/SchemaXORContent"
        }
      ]
    },
    "Paths": {
      "type": "object",
      "patternProperties": {
        "^\\/": {
          "$ref": "#/definitions/PathItem"
        },
        "^x-": {}
      },
      "additionalProperties": false,
      "properties": {
        "x-42c-local-strategy": {
          "$ref": "#/definitions/X42cLocalStrategy"
        }
      }
    },
    "PathItem": {
      "type": "object",
      "properties": {
        "$ref": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "uniqueItems": true
        },
        "x-42c-local-strategy": {
          "$ref": "#/definitions/X42cLocalStrategy"
        }
      },
      "patternProperties": {
        "^(get|put|post|delete|options|head|patch|trace)$": {
          "$ref": "#/definitions/Operation"
        },
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Operation": {
      "type": "object",
      "required": [
        "responses"
      ],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        },
        "operationId": {
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/Parameter"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "uniqueItems": true
        },
        "requestBody": {
          "oneOf": [
            {
              "$ref": "#/definitions/RequestBody"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "responses": {
          "$ref": "#/definitions/Responses"
        },
        "callbacks": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Callback"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "security": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SecurityRequirement"
          }
        },
        "servers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          }
        },
        "x-42c-local-strategy": {
          "$ref": "#/definitions/X42cLocalStrategy"
        },
        "x-42c-no-authentication": {
          "$ref": "#/definitions/X42cNoAuthentication"
        },
        "x-42c-mtls": {
          "$ref": "#/definitions/X42cMTLS"
        },
        "x-42c-sensitivity": {
          "$ref": "#/definitions/X42cSensitivity"
        },
        "x-42c-weight-input": {
          "$ref": "#/definitions/X42cWeightInput"
        },
        "x-42c-weight-output": {
          "$ref": "#/definitions/X42cWeightOutput"
        },
        "x-42c-weight-parameters": {
          "$ref": "#/definitions/X42cWeightParameters"
        },
        "x-42c-weight-requestBody": {
          "$ref": "#/definitions/X42cWeightRequestBody"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Responses": {
      "type": "object",
      "properties": {
        "default": {
          "oneOf": [
            {
              "$ref": "#/definitions/Response"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "x-42c-local-strategy": {
          "$ref": "#/definitions/X42cLocalStrategy"
        }
      },
      "patternProperties": {
        "^[1-5](?:\\d{2}|XX)$": {
          "oneOf": [
            {
              "$ref": "#/definitions/Response"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "^x-": {}
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "SecurityRequirement": {
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        }
      }
    },
    "Tag": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalDocs": {
          "$ref": "#/definitions/ExternalDocumentation"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ExternalDocumentation": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri-reference"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ExampleXORExamples": {
      "description": "Example and examples are mutually exclusive",
      "not": {
        "required": [
          "example",
          "examples"
        ]
      }
    },
    "SchemaXORContent": {
      "description": "Schema and content are mutually exclusive, at least one is required",
      "not": {
        "required": [
          "schema",
          "content"
        ]
      },
      "oneOf": [
        {
          "required": [
            "schema"
          ]
        },
        {
          "required": [
            "content"
          ],
          "description": "Some properties are not allowed if content is present",
          "allOf": [
            {
              "not": {
                "required": [
                  "style"
                ]
              }
            },
            {
              "not": {
                "required": [
                  "explode"
                ]
              }
            },
            {
              "not": {
                "required": [
                  "allowReserved"
                ]
              }
            },
            {
              "not": {
                "required": [
                  "example"
                ]
              }
            },
            {
              "not": {
                "required": [
                  "examples"
                ]
              }
            }
          ]
        }
      ]
    },
    "Parameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "allowEmptyValue": {
          "type": "boolean",
          "default": false
        },
        "style": {
          "type": "string"
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        },
        "schema": {
          "oneOf": [
            {
              "$ref": "#/definitions/Schema"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ]
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          },
          "minProperties": 1,
          "maxProperties": 1
        },
        "example": {},
        "examples": {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Example"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "required": [
        "name",
        "in"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ExampleXORExamples"
        },
        {
          "$ref": "#/definitions/SchemaXORContent"
        },
        {
          "$ref": "#/definitions/ParameterLocation"
        }
      ]
    },
    "ParameterLocation": {
      "description": "Parameter location",
      "oneOf": [
        {
          "description": "Parameter in path",
          "required": [
            "required"
          ],
          "properties": {
            "in": {
              "enum": [
                "path"
              ]
            },
            "style": {
              "enum": [
                "matrix",
                "label",
                "simple"
              ],
              "default": "simple"
            },
            "required": {
              "enum": [
                true
              ]
            }
          }
        },
        {
          "description": "Parameter in query",
          "properties": {
            "in": {
              "enum": [
                "query"
              ]
            },
            "style": {
              "enum": [
                "form",
                "spaceDelimited",
                "pipeDelimited",
                "deepObject"
              ],
              "default": "form"
            }
          }
        },
        {
          "description": "Parameter in header",
          "properties": {
            "in": {
              "enum": [
                "header"
              ]
            },
            "style": {
              "enum": [
                "simple"
              ],
              "default": "simple"
            }
          }
        },
        {
          "description": "Parameter in cookie",
          "properties": {
            "in": {
              "enum": [
                "cookie"
              ]
            },
            "style": {
              "enum": [
                "form"
              ],
              "default": "form"
            }
          }
        }
      ]
    },
    "RequestBody": {
      "type": "object",
      "required": [
        "content"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MediaType"
          }
        },
        "required": {
          "type": "boolean",
          "default": false
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "SecurityScheme": {
      "oneOf": [
        {
          "$ref": "#/definitions/APIKeySecurityScheme"
        },
        {
          "$ref": "#/definitions/HTTPSecurityScheme"
        },
        {
          "$ref": "#/definitions/OAuth2SecurityScheme"
        },
        {
          "$ref": "#/definitions/OpenIdConnectSecurityScheme"
        }
      ]
    },
    "APIKeySecurityScheme": {
      "type": "object",
      "required": [
        "type",
        "name",
        "in"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "apiKey"
          ]
        },
        "name": {
          "type": "string"
        },
        "in": {
          "type": "string",
          "enum": [
            "header",
            "query",
            "cookie"
          ]
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "HTTPSecurityScheme": {
      "type": "object",
      "required": [
        "scheme",
        "type"
      ],
      "properties": {
        "scheme": {
          "type": "string"
        },
        "bearerFormat": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "http"
          ]
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "oneOf": [
        {
          "description": "Bearer",
          "properties": {
            "scheme": {
              "enum": [
                "bearer"
              ]
            }
          }
        },
        {
          "description": "Non Bearer",
          "not": {
            "required": [
              "bearerFormat"
            ]
          },
          "properties": {
            "scheme": {
              "not": {
                "enum": [
                  "bearer"
                ]
              }
            }
          }
        }
      ]
    },
    "OAuth2SecurityScheme": {
      "type": "object",
      "required": [
        "type",
        "flows"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "oauth2"
          ]
        },
        "flows": {
          "$ref": "#/definitions/OAuthFlows"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "OpenIdConnectSecurityScheme": {
      "type": "object",
      "required": [
        "type",
        "openIdConnectUrl"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "openIdConnect"
          ]
        },
        "openIdConnectUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "description": {
          "type": "string"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "OAuthFlows": {
      "type": "object",
      "properties": {
        "implicit": {
          "$ref": "#/definitions/ImplicitOAuthFlow"
        },
        "password": {
          "$ref": "#/definitions/PasswordOAuthFlow"
        },
        "clientCredentials": {
          "$ref": "#/definitions/ClientCredentialsFlow"
        },
        "authorizationCode": {
          "$ref": "#/definitions/AuthorizationCodeOAuthFlow"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ImplicitOAuthFlow": {
      "type": "object",
      "required": [
        "authorizationUrl",
        "scopes"
      ],
      "properties": {
        "authorizationUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "PasswordOAuthFlow": {
      "type": "object",
      "required": [
        "tokenUrl"
      ],
      "properties": {
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "ClientCredentialsFlow": {
      "type": "object",
      "required": [
        "tokenUrl"
      ],
      "properties": {
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "AuthorizationCodeOAuthFlow": {
      "type": "object",
      "required": [
        "authorizationUrl",
        "tokenUrl"
      ],
      "properties": {
        "authorizationUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "tokenUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "refreshUrl": {
          "type": "string",
          "format": "uri-reference"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "operationRef": {
          "type": "string",
          "format": "uri-reference"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {}
        },
        "requestBody": {},
        "description": {
          "type": "string"
        },
        "server": {
          "$ref": "#/definitions/Server"
        }
      },
      "patternProperties": {
        "^x-": {}
      },
      "additionalProperties": false,
      "not": {
        "description": "Operation Id and Operation Ref are mutually exclusive",
        "required": [
          "operationId",
          "operationRef"
        ]
      }
    },
    "Callback": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/PathItem"
      },
      "patternProperties": {
        "^x-": {}
      }
    },
    "Encoding": {
      "type": "object",
      "properties": {
        "contentType": {
          "type": "string"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Header"
          }
        },
        "style": {
          "type": "string",
          "enum": [
            "form",
            "spaceDelimited",
            "pipeDelimited",
            "deepObject"
          ]
        },
        "explode": {
          "type": "boolean"
        },
        "allowReserved": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "X42cLocalStrategy": {
      "type": "object",
      "properties": {
        "x-42c-strategy": {
          "$ref": "#/definitions/X42cStrategy"
        }
      }
    },
    "X42cRequestStrategies": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "operations": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "get",
                "put",
                "post",
                "delete",
                "options",
                "head",
                "patch",
                "trace"
              ]
            }
          },
          "x-42c-strategy": {
            "$ref": "#/definitions/X42cStrategy"
          }
        }
      }
    },
    "X42cResponseStrategies": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^([1-5](?:\\d{2}|XX)|default)$"
            }
          },
          "x-42c-strategy": {
            "$ref": "#/definitions/X42cStrategy"
          }
        }
      }
    },
    "X42cStrategy": {
      "type": "object",
      "properties": {
        "protections": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/X42cDeactivateAllowList"
              },
              {
                "$ref": "#/definitions/x-42c-access-control-based-on-ip-range_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-forward-client-certificate_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-ip-allowlist_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jws-validation_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-request-allowlist_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-request-limiter-based-on-ip_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-request-limiter_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-response-allowlist_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-security-headers_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-set-client-ip_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.2"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-ec_0.3"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.2"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-hmac_0.3"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-no-sig-check_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-no-sig-check_0.3"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-rsa-no-sig-check_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-rsa-no-sig-check_0.3"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.2"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation-rsa_0.3"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation_0.1"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation_0.2"
              },
              {
                "$ref": "#/definitions/x-42c-jwt-validation_0.3"
              }
            ]
          }
        }
      }
    },
    "X42cNoAuthentication": {
      "type": "boolean",
      "default": false
    },
    "X42cMTLS": {
      "type": "boolean",
      "default": false
    },
    "X42cSensitivity": {
      "type": "integer",
      "minimum": 1,
      "maximum": 5,
      "default": 3
    },
    "X42cSensitivityData": {
      "type": "integer",
      "minimum": 1,
      "maximum": 5,
      "default": 3
    },
    "X42cSkipIssues": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "X42cWeightContent": {
      "type": "integer",
      "default": 80,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightHeader": {
      "type": "integer",
      "default": 20,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightSuccess": {
      "type": "integer",
      "default": 70,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightFail": {
      "type": "integer",
      "default": 30,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightInput": {
      "type": "integer",
      "default": 80,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightOutput": {
      "type": "integer",
      "default": 20,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightParameters": {
      "type": "integer",
      "default": 50,
      "maximum": 100,
      "minimum": 0
    },
    "X42cWeightRequestBody": {
      "type": "integer",
      "default": 50,
      "maximum": 100,
      "minimum": 0
    },
    "X42cSample": {
      "additionalProperties": true,
      "additionalItems": true
    },
    "X42cDeactivateAllowList": {
      "type": "object",
      "required": [
        "x-42c-deactivate-allowlist"
      ],
      "properties": {
        "x-42c-deactivate-allowlist": {
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "x-42c-access-control-based-on-ip-range_0.1": {
      "type": "object",
      "required": [
        "x-42c-access-control-based-on-ip-range_0.1"
      ],
      "properties": {
        "x-42c-access-control-based-on-ip-range_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "ip.range.list"
          ],
          "properties": {
            "ip.range.list": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "maxItems": 10,
              "additionalItems": false,
              "description": "IP Range list"
            }
          },
          "description": "Access Control based on IP"
        }
      },
      "additionalProperties": false
    },
    "x-42c-forward-client-certificate_0.1": {
      "type": "object",
      "required": [
        "x-42c-forward-client-certificate_0.1"
      ],
      "properties": {
        "x-42c-forward-client-certificate_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "backend.header.name"
          ],
          "properties": {
            "backend.header.name": {
              "type": "string",
              "pattern": "",
              "minLength": 1,
              "maxLength": 9999,
              "description": "Client certificate"
            }
          },
          "description": "Forward client certificate to backend service"
        }
      },
      "additionalProperties": false
    },
    "x-42c-ip-allowlist_0.1": {
      "type": "object",
      "required": [
        "x-42c-ip-allowlist_0.1"
      ],
      "properties": {
        "x-42c-ip-allowlist_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "ip.allow.list"
          ],
          "properties": {
            "ip.allow.list": {
              "type": "array",
              "additionalItems": false,
              "items": {
                "type": "string",
                "pattern": "[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}",
                "minLength": 7,
                "maxLength": 15
              }
            }
          },
          "description": "Automatic allowlist protection based on the client ip"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jws-validation_0.1": {
      "type": "object",
      "required": [
        "x-42c-jws-validation_0.1"
      ],
      "properties": {
        "x-42c-jws-validation_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "jp.signed.data": {
              "type": "string",
              "minLength": 1,
              "maxLength": 500,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "Signed data"
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWS validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-request-allowlist_0.1": {
      "type": "object",
      "required": [
        "x-42c-request-allowlist_0.1"
      ],
      "properties": {
        "x-42c-request-allowlist_0.1": {
          "type": "object",
          "additionalProperties": false,
          "properties": {},
          "description": "Automatic allowlist protection on the incoming request sent by the client"
        }
      },
      "additionalProperties": false
    },
    "x-42c-request-limiter-based-on-ip_0.1": {
      "type": "object",
      "required": [
        "x-42c-request-limiter-based-on-ip_0.1"
      ],
      "properties": {
        "x-42c-request-limiter-based-on-ip_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "hits",
            "window"
          ],
          "properties": {
            "hits": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Max request number"
            },
            "window": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Window"
            },
            "burst.enabled": {
              "type": "boolean",
              "description": "Activate 'burst'",
              "default": false
            },
            "burst.hits": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Max burst request number",
              "default": 5
            },
            "burst.window": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Burst window size",
              "default": 2
            },
            "cache.name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_]{1,255}$",
              "description": "Cache name",
              "default": "default"
            },
            "cache.type": {
              "type": "string",
              "enum": [
                "MEMORY"
              ],
              "description": "Cache type",
              "default": "MEMORY"
            },
            "add.retry_after": {
              "type": "boolean",
              "description": "Add 'Retry-After' header",
              "default": false
            }
          },
          "description": "Request limiter"
        }
      },
      "additionalProperties": false
    },
    "x-42c-request-limiter_0.1": {
      "type": "object",
      "required": [
        "x-42c-request-limiter_0.1"
      ],
      "properties": {
        "x-42c-request-limiter_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "key"
          ],
          "properties": {
            "hits": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Max request number"
            },
            "window": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Window"
            },
            "burst.enabled": {
              "type": "boolean",
              "description": "Activate 'burst'",
              "default": false
            },
            "burst.hits": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Max burst request number",
              "default": 5
            },
            "burst.window": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "Burst window size",
              "default": 2
            },
            "cache.name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_]{1,255}$",
              "description": "Cache name",
              "default": "default"
            },
            "cache.type": {
              "type": "string",
              "enum": [
                "MEMORY"
              ],
              "description": "Cache type",
              "default": "MEMORY"
            },
            "key": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z0-9_]{1,255}$",
              "description": "Key"
            },
            "add.retry_after": {
              "type": "boolean",
              "description": "Add 'Retry-After' header",
              "default": false
            }
          },
          "description": "Request limiter"
        }
      },
      "additionalProperties": false
    },
    "x-42c-response-allowlist_0.1": {
      "type": "object",
      "required": [
        "x-42c-response-allowlist_0.1"
      ],
      "properties": {
        "x-42c-response-allowlist_0.1": {
          "type": "object",
          "additionalProperties": false,
          "properties": {},
          "description": "Automatic allowlist protection on the response sent by the backend service"
        }
      },
      "additionalProperties": false
    },
    "x-42c-security-headers_0.1": {
      "type": "object",
      "required": [
        "x-42c-security-headers_0.1"
      ],
      "properties": {
        "x-42c-security-headers_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "mode"
          ],
          "properties": {
            "hsts.max_age": {
              "type": "integer",
              "minimum": 0,
              "maximum": 999999999,
              "description": "HSTS max age",
              "default": 3600
            },
            "csp.policy": {
              "type": "string",
              "minLength": 1,
              "maxLength": 1000,
              "description": "Content Security Policy",
              "default": "default-src: 'self'; upgrade-insecure-requests; referrer no-referrer"
            },
            "mode": {
              "type": "string",
              "enum": [
                "add-only",
                "add-replace"
              ],
              "description": "Mode",
              "default": "add-only"
            },
            "remove.headers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 0,
              "maxItems": 99,
              "additionalItems": false,
              "description": "Headers to remove",
              "default": [
                "X-Powered-By",
                "X-AspNet-Version",
                "X-AspNetMvc-Version"
              ]
            }
          },
          "description": "Add HTTP security headers in response"
        }
      },
      "additionalProperties": false
    },
    "x-42c-set-client-ip_0.1": {
      "type": "object",
      "required": [
        "x-42c-set-client-ip_0.1"
      ],
      "properties": {
        "x-42c-set-client-ip_0.1": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "ip.header.name",
            "ip.header.mandatory"
          ],
          "properties": {
            "ip.header.name": {
              "type": "string",
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[a-zA-Z_\\-]+$",
              "description": "IP Header name"
            },
            "ip.header.mandatory": {
              "type": "boolean",
              "description": "IP Header must be present ",
              "default": true
            },
            "remote.ip.allowlist": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 10,
                "maxLength": 255
              },
              "maxItems": 10,
              "description": "IPs/Network addresses of trusted network frontends",
              "default": []
            }
          },
          "description": "Set Client IP"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-ec_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-ec_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation-ec_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT Elliptic Curve validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-ec_0.2": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-ec_0.2"
      ],
      "properties": {
        "x-42c-jwt-validation-ec_0.2": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest Allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                "minLength": 1,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT Elliptic Curve validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-ec_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-ec_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation-ec_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest Allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                "minLength": 9,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "jwks.proxy": {
              "schema": {
                "type": "string",
                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                "minLength": 3,
                "maxLength": 250
              },
              "description": "JWKS connect proxy"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT Elliptic Curve validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-hmac_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-hmac_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation-hmac_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT HMAC validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-hmac_0.2": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-hmac_0.2"
      ],
      "properties": {
        "x-42c-jwt-validation-hmac_0.2": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value Allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                "minLength": 1,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT HMAC validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-hmac_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-hmac_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation-hmac_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value Allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                "minLength": 9,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "jwks.proxy": {
              "schema": {
                "type": "string",
                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                "minLength": 3,
                "maxLength": 250
              },
              "description": "JWKS connect proxy"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT HMAC validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-no-sig-check_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-no-sig-check_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation-no-sig-check_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)"
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWT validation (no signature check)"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-no-sig-check_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-no-sig-check_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation-no-sig-check_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)"
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWT validation (no signature check)"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-rsa-no-sig-check_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-rsa-no-sig-check_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation-rsa-no-sig-check_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT RSA validation (no sig check)"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-rsa-no-sig-check_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-rsa-no-sig-check_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation-rsa-no-sig-check_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT RSA validation (no sig check)"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-rsa_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-rsa_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation-rsa_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT RSA validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-rsa_0.2": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-rsa_0.2"
      ],
      "properties": {
        "x-42c-jwt-validation-rsa_0.2": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name",
              "default": "Authorization"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                "minLength": 1,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT RSA validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation-rsa_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation-rsa_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation-rsa_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name",
              "default": "Authorization"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                "minLength": 9,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "jwks.proxy": {
              "schema": {
                "type": "string",
                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                "minLength": 3,
                "maxLength": 250
              },
              "description": "JWKS connect proxy"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)",
              "default": 86400
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            }
          },
          "required": [
            "header.name"
          ],
          "additionalProperties": false,
          "description": "JWT RSA validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation_0.1": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation_0.1"
      ],
      "properties": {
        "x-42c-jwt-validation_0.1": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)"
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWT validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation_0.2": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation_0.2"
      ],
      "properties": {
        "x-42c-jwt-validation_0.2": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[.\\!/\\w]*))?)",
                "minLength": 1,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWT validation"
        }
      },
      "additionalProperties": false
    },
    "x-42c-jwt-validation_0.3": {
      "type": "object",
      "required": [
        "x-42c-jwt-validation_0.3"
      ],
      "properties": {
        "x-42c-jwt-validation_0.3": {
          "type": "object",
          "properties": {
            "header.name": {
              "type": "string",
              "pattern": "^[0-9a-zA-Z\\-_]{1,100}$",
              "minLength": 1,
              "maxLength": 100,
              "description": "Header name"
            },
            "allow.basic.value": {
              "type": "boolean",
              "description": "Is Basic or Digest value allowed",
              "default": false
            },
            "jwk.envvar": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "description": "JWK env variable name",
              "default": "JWK"
            },
            "jwks.uri": {
              "schema": {
                "type": "string",
                "pattern": "^(?:https?://\\w+(?:[\\-.]\\w+)*(?::\\d+)?/(?:\\.?\\w[\\w\\-./+%]*)?(?:[?;][\\w\\-./+%&=;,@]*)?)$",
                "minLength": 9,
                "maxLength": 500
              },
              "description": "JWKS endpoint"
            },
            "jwks.proxy": {
              "schema": {
                "type": "string",
                "pattern": "^(?:\\w+(?:[\\-.]\\w+)*:\\d+)$",
                "minLength": 3,
                "maxLength": 250
              },
              "description": "JWKS connect proxy"
            },
            "forward.jwt": {
              "type": "boolean",
              "description": "Forward the JWT to backend",
              "default": true
            },
            "lifetime": {
              "type": "number",
              "minimum": 0,
              "maximum": 99999999,
              "description": "Token lifetime (seconds)",
              "default": 5
            },
            "drift": {
              "type": "number",
              "minimum": 0,
              "maximum": 86400,
              "description": "Drift time (in seconds)",
              "default": 10
            },
            "authorized.algorithms": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "HS256",
                  "HS384",
                  "HS512",
                  "RS256",
                  "RS384",
                  "RS512",
                  "PS256",
                  "PS384",
                  "PS512",
                  "ES256",
                  "ES384",
                  "ES512"
                ]
              },
              "description": "Authorized algorithms"
            },
            "jti.timeout": {
              "type": "integer",
              "minimum": 1,
              "maximum": 99999999,
              "description": "JTI timeout (seconds)"
            },
            "jwk.cache.timeout": {
              "type": "number",
              "minimum": 60,
              "maximum": 28000,
              "description": "Cache expiration time for JWK entry",
              "default": 3600
            },
            "jp.claims.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer claims schema"
            },
            "claims.schema": {
              "type": "object",
              "description": "Claims schema"
            },
            "jp.jose.header.schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50000,
              "pattern": "^\\#(/([^/~]+|~[01])+)*$",
              "description": "JPointer jose header schema"
            },
            "jose.header.schema": {
              "type": "object",
              "description": "JOSE header schema"
            }
          },
          "required": [
            "header.name",
            "authorized.algorithms"
          ],
          "additionalProperties": false,
          "description": "JWT validation"
        }
      },
      "additionalProperties": false
    }
  }
}
