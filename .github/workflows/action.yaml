name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  lint-and-test:
    name: Lint, Type Check & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run check:type

      - name: Run tests
        run: npm test
        env:
          CI: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 30

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t 3d-inventory-api:${{ github.sha }} .
          docker tag 3d-inventory-api:${{ github.sha }} 3d-inventory-api:latest

      - name: Test Docker image
        run: |
          docker run --rm -d --name test-container -p 8080:8080 \
            -e NODE_ENV=production \
            -e PORT=8080 \
            -e HOST=0.0.0.0 \
            -e ATLAS_URI=mongodb://localhost:27017 \
            -e DBNAME=test \
            -e JWT_SECRET=test-secret \
            3d-inventory-api:latest
          sleep 10
          docker logs test-container
          docker stop test-container
